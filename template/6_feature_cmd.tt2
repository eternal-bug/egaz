#!/bin/bash
# perl [% stopwatch.cmd_line %]

cd [% working_dir %]

[% FOREACH id IN all_ids -%]
#----------------------------------------------------------#
# [% id %]
#----------------------------------------------------------#

#----------------------------#
# gff to feature
#----------------------------#
cd [% working_dir %]/Processing/[% id %]

# coding
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] eq q{CDS} and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    > feature.coding.[% id %].txt

# repeats
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] eq q{region} and $F[8] =~ /mobile_element|Transposon/i and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    > feature.repeats.[% id %].txt
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] =~ /repeat/ and $F[8] !~ /RNA/ and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    >> feature.repeats.[% id %].txt

# others
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] eq q{ncRNA} and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    > feature.ncRNA.[% id %].txt
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] eq q{rRNA} and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    > feature.rRNA.[% id %].txt
perl -anl -e '
    /^#/ and next;
    $F[0] =~ s/\.\d+//;
    $F[2] eq q{tRNA} and print qq{$F[0]:$F[3]-$F[4]};
    ' \
    [% working_dir %]/Genomes/[% id %]/*.gff \
    > feature.tRNA.[% id %].txt

#----------------------------#
# merge txt and stat
#----------------------------#
for ftr in coding repeats ncRNA rRNA tRNA
do
    if [ -s feature.$ftr.[% id %].txt ]
    then
        # there are some data in .txt file
        runlist cover feature.$ftr.[% id %].txt -o feature.$ftr.[% id %].yml;
    else
        # .txt file is empty
        # create empty runlists from chr.sizes
        perl -an -e '
            BEGIN {
                print qq{---\n}
            };
            print qq{$F[0]: "-"\n};
            END {
                print qq{\n}
            };
        ' [% working_dir %]/Genomes/[% id %]/chr.sizes \
        > feature.$ftr.[% id %].yml;
    fi;
    runlist stat --size chr.sizes feature.$ftr.[% id %].yml;
done

echo "feature,name,length,size,coverage" > [% working_dir %]/Results/[% id %]/[% id %].feature.csv
for ftr in coding repeats ncRNA rRNA tRNA
do
    FTR=$ftr perl -nl -e '/^name/ and next; print qq{$ENV{FTR},$_};' feature.$ftr.[% id %].yml.csv;
done >> [% working_dir %]/Results/[% id %]/[% id %].feature.csv

for ftr in coding repeats ncRNA rRNA tRNA
do
    runlist compare --op intersect --mk copy.yml feature.$ftr.[% id %].yml -o [% id %].cc.runlist.$ftr.yml
done

for ftr in coding repeats ncRNA rRNA tRNA
do
    runlist stat --mk --size chr.sizes [% id %].cc.runlist.$ftr.yml;
done

echo "feature,copy,name,length,size,coverage" > [% working_dir %]/Results/[% id %]/[% id %].feature.copies.csv
for ftr in coding repeats ncRNA rRNA tRNA
do
    FTR=$ftr perl -nl -e '
        /^key/ and next;
        /\,all\,/ or next;
        print qq{$ENV{FTR},$_};
    ' [% id %].cc.runlist.$ftr.yml.csv;
done >> [% working_dir %]/Results/[% id %]/[% id %].feature.copies.csv

for ftr in coding repeats ncRNA rRNA tRNA
do
    rm feature.$ftr.[% id %].txt;
    rm feature.$ftr.[% id %].yml;
    rm feature.$ftr.[% id %].yml.csv;
    rm [% id %].cc.runlist.$ftr.yml;
    rm [% id %].cc.runlist.$ftr.yml.csv;
done

[% END -%]
