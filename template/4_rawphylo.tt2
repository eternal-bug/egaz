#!/bin/bash
# perl [% stopwatch.cmd_line %]

cd [% working_dir %]

sleep 1;

#----------------------------#
# Clean previous directories
#----------------------------#
if [ -d [% working_dir %]/[% multi_name %]_raw ]; then
    rm -fr [% working_dir %]/[% multi_name %]_raw;
fi;
mkdir -p [% working_dir %]/[% multi_name %]_raw;

if [ -d [% working_dir %]/[% multi_name %]_rawphylo ]; then
    rm -fr [% working_dir %]/[% multi_name %]_rawphylo;
fi;
mkdir -p [% working_dir %]/[% multi_name %]_rawphylo;

#----------------------------#
# maf2fas
#----------------------------#
echo "==> Convert maf to fas"

[% FOREACH q IN queries -%]
echo "    [% target %]vs[% q %]"
mkdir -p [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %]
find [% working_dir %]/Pairwise/[% target %]vs[% q %] -name "*.maf" -or -name "*.maf.gz" \
    | parallel --no-run-if-empty -j 1 \
        fasops maf2fas {} -o [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %]/{/}.fas
sleep 1;
fasops covers \
    [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %]/*.fas \
    -n [% target %] -l [% length %] -t 10 \
    -o [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].yml

[% END -%]

[% IF queries.size > 1 -%]
#----------------------------#
# Intersect
#----------------------------#
echo "==> Intersect"

runlist compare --op intersect \
[% FOREACH q IN queries -%]
    [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].yml \
[% END -%]
    -o stdout \
    | runlist span stdin \
        --op excise -n [% length %] \
        -o [% working_dir %]/[% multi_name %]_raw/intersect.yml
[% END -%]

#----------------------------#
# Coverage
#----------------------------#
echo "==> Coverage"

runlist merge [% working_dir %]/[% multi_name %]_raw/*.yml \
    -o stdout \
    | runlist stat stdin \
        -s [% working_dir %]/Genomes/[% target %]/chr.sizes \
        --all --mk \
        -o [% working_dir %]/Stats/pairwise.coverage.csv

[% IF queries.size > 1 -%]
#----------------------------#
# slicing
#----------------------------#
echo "==> Slicing with intersect"

[% FOREACH q IN queries -%]
echo "    [% target %]vs[% q %]"

if [ -e [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].slice.fas ];
then
    rm [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].slice.fas
fi
find [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %]/ -name "*.fas" -or -name "*.fas.gz" \
    | sort \
    | parallel --no-run-if-empty --keep-order -j 1 " \
        fasops slice {} \
            [% working_dir %]/[% multi_name %]_raw/intersect.yml \
            -n [% target %] -l [% length %] -o stdout \
            >> [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].slice.fas
    "

[% END -%]

#----------------------------#
# join
#----------------------------#
echo "==> Join intersects"

echo "    fasops join"
fasops join \
[% FOREACH q IN queries -%]
    [% working_dir %]/[% multi_name %]_raw/[% target %]vs[% q %].slice.fas \
[% END -%]
    -n [% target %] \
    -o [% working_dir %]/[% multi_name %]_raw/join.raw.fas

echo [% target %] > [% working_dir %]/[% multi_name %]_raw/names.list
[% FOREACH q IN queries -%]
echo [% q %] >> [% working_dir %]/[% multi_name %]_raw/names.list
[% END -%]

echo "    fasops subset"
fasops subset \
    [% working_dir %]/[% multi_name %]_raw/join.raw.fas \
    [% working_dir %]/[% multi_name %]_raw/names.list \
    --required \
    -o [% working_dir %]/[% multi_name %]_raw/join.filter.fas

echo "    fasops refine"
fasops refine \
    --msa mafft --parallel [% parallel %] \
    [% working_dir %]/[% multi_name %]_raw/join.filter.fas \
    -o [% working_dir %]/[% multi_name %]_raw/join.refine.fas

[% END -%]

#----------------------------#
# RAxML: raw phylo guiding tree
#----------------------------#
cd [% working_dir %]/[% multi_name %]_rawphylo

[% IF queries.size > 2 -%]
fasops concat \
    [% working_dir %]/[% multi_name %]_raw/join.refine.fas \
    [% working_dir %]/[% multi_name %]_raw/names.list \
    -o [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].phy \
    --total 10_000_000 --relaxed

[% IF avx -%]
raxmlHPC-PTHREADS-AVX -T [% IF parallel > 8 %] 8 [% ELSIF parallel > 3 %] [% parallel - 1 %] [% ELSE %] 2 [% END %] \
    -f a -m GTRGAMMA -p $(openssl rand 3 | od -DAn) -N 100 -x $(openssl rand 3 | od -DAn) \
[% IF outgroup -%]
    -o [% outgroup %] \
[% END -%]
    --no-bfgs -n [% multi_name %] -s [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].phy
[% ELSE -%]
raxmlHPC-PTHREADS -T [% IF parallel > 8 %] 8 [% ELSIF parallel > 3 %] [% parallel - 1 %] [% ELSE %] 2 [% END %] \
    -f a -m GTRGAMMA -p $(openssl rand 3 | od -DAn) -N 100 -x $(openssl rand 3 | od -DAn) \
[% IF outgroup -%]
    -o [% outgroup %] \
[% END -%]
    --no-bfgs -n [% multi_name %] -s [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].phy
[% END -%]

cp [% working_dir %]/[% multi_name %]_rawphylo/RAxML_best* [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].nwk

[% ELSIF queries.size == 2 -%]
echo "(([% target %],[% queries.0 %]),[% queries.1 %]);" > [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].nwk

[% ELSE -%]

echo "([% target %],[% queries.0 %]);" > [% working_dir %]/[% multi_name %]_rawphylo/[% multi_name %].nwk

[% END -%]
